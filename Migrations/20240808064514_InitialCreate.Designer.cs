// <auto-generated />
using BinarTestMandiri.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BinarTestMandiri.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20240808064514_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BinarTestMandiri.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Price = 15000,
                            Title = "Women in the Valley of the Kings"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Price = 23000,
                            Title = "Ask Not: The Kennedys and the Women They Destroyed"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Price = 17000,
                            Title = "One Piece"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Price = 17000,
                            Title = "Naruto"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Price = 30000,
                            Title = "The Grandest Game"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Price = 25000,
                            Title = "Look in the Mirror"
                        });
                });

            modelBuilder.Entity("BinarTestMandiri.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A biography (from the Greek words bios meaning \"life\", and graphos meaning \"write\") is a non-fictional account of a person's life. Biographies are written by an author who is not the subject/focus of the book.",
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A comic book or comicbook, also called comic magazine or simply comic, is a publication that consists of comic art in the form of sequential juxtaposed panels that represent individual scenes.",
                            Name = "Comics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The mystery genre is a genre of fiction that follows a crime (like a murder or a disappearance) from the moment it is committed to the moment it is solved. Mystery novels are often called “whodunnits” because they turn the reader into a detective trying to figure out the who, what, when, and how of a particular crime.",
                            Name = "Mystery"
                        });
                });

            modelBuilder.Entity("BinarTestMandiri.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BinarTestMandiri.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "12345",
                            Username = "Andi"
                        },
                        new
                        {
                            Id = 2,
                            Password = "12345",
                            Username = "Budi"
                        });
                });

            modelBuilder.Entity("BinarTestMandiri.Models.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 26,
                            Email = "andi@test.com",
                            Name = "Andi Suherman",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            Email = "budi@test.com",
                            Name = "Budi Herlambang",
                            UserId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
